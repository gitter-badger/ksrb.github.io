@import 'compass';
@import 'foundation/components/global';
@import 'foundation/functions';
@import 'globals';

.experience-container {

  //Utility mixin to set spacing on elements
  @mixin spacing() {
    margin-bottom: rem-calc(10px);
  }

  $border-color: #bbbbbb;

  @include spacing;
  border: 1px solid $border-color;

  transition: box-shadow .3s ease;

  .organization-logo {
    @include spacing;

    text-align: center;

    img {
      height: 80px;
    }
  }

  header {
    @include spacing;

    background-color: #F5F5F5;
    border-bottom: 1px solid $border-color;
    padding: 15px;
  }

  .skills-used {
    @include display-flex;

    line-height: 16px;
    text-align: center;
    color: $white;
    font-size: rem-calc(12px);
  }

  .content {
    padding: rem-calc(15px);
  }

  .overview {
    @include spacing;

    display: flex;
    justify-content: space-between;

    font-weight: bold;

    .title {
      color: $primary;
    }

    .date {
      text-align: right;
      font-style: italic;
    }
  }

  .samples {
    display: flex;
    justify-content: space-between;
    align-items: center;

    //Hide all but the first on small displays
    @media #{$small-only}{
      .sample:not(:nth-child(1)) {
        display: none;
      }
    }

  }

  &:hover {
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, .5);
  }

  /**
   * Creates a successively brighter gradient class for each skill entered
   * @param $base-color - color in which gradients are based off of
   * @param $skill - array of skills by name
   */
  @mixin generate-skills-gradient($base-color, $skills...) {
    //Iterate through the skills
    @for $i from 1 through length($skills) {
      //Generate class name based on skill name
      #{"."+nth($skills, $i)} {
        //Lighten top gradient by 15% of base color
        @include background(linear-gradient(lighten($base-color, 15%), $base-color));
        &:hover {
          $hover-color: lighten(adjust_hue($base-color, 5%), 5%);
          @include background(linear-gradient(lighten($hover-color, 15%), $hover-color));
        }
      }
      //lighten base color by 8% every iteration
      $base-color: lighten($base-color, 8%);
    }
  }

  //Programming skills are blue
  @include generate-skills-gradient(#354B88, 'Java', 'js');

  //Design skills are green
  @include generate-skills-gradient(#457362, 'css', 'Photoshop', 'Illustrator');
}

.reveal-modal {
  @media #{$small-only}{
    min-height: 0;
  }
}

.experience-slider {
  //Change slick slider control colors
  .slick-prev:before, .slick-next:before {
    color: #7f7f7f;
  }

  .experience-slide {
    position: relative;

    .slide-image {
      margin: 0 auto rem-calc(10px) auto;
      max-height: 100vh;
    }

    .slide-caption {
      margin: 0;
      padding: rem-calc(20px) 0;

      width: 100%;

      background: #F5F5F5;

      text-align: center;
    }
  }
}